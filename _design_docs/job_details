{
   "_id": "_design/job_details",
   "_rev": "84-907252a179fa560d56109a89e7000c16",
   "language": "javascript",
   "views": {
       "owner": {
           "map": "function(doc) {\n\n \n  if (doc.owner && doc.Jobname) {\n    if (doc.Progname === \"RFKK_MASS_ACT_SINGLE_JOB\") {\n       var underposn = doc.Jobname.lastIndexOf(\"_\"); \n        var job = doc.Jobname.slice(0,underposn);\n\tvar short_job = job.slice(0,4)+\"_\"+job.slice(12); \n        emit([short_job, doc.company, doc.owner ], doc.Strtdate);\n    } else {\n  \temit([doc.Progname, doc.company, doc.Progtype, doc.owner], doc.Strtdate);\n    }\n  }\n}",
           "reduce": "_count"
       },
       "server": {
           "map": "function(doc) {\n  var intervals = [];\n  var sdt, edt;\n  var sdt5; \n  var val = {};\nvar shortname;\n\n  if (doc.Strttime && doc.owner && doc.Endtime) {\n  \tsdt = new Date(doc.Strttime);\n\tsdt5 = new Date(Math.floor(sdt.getTime()/60000)*60000);\t\n\tedt = new Date(doc.Endtime);\n\n\twhile (sdt5 < edt) {\n\t\tintervals.push (new Date(sdt5));\n\t\tsdt5 = new Date(sdt5.getTime() + 60000);\n\t}\n\n//\tval = { server : doc.Server, WP : doc.WP, timeslots : intervals };\n\n    if (doc.Progname === \"RFKK_MASS_ACT_SINGLE_JOB\") {\n       var underposn = doc.Jobname.lastIndexOf(\"_\"); \n        var job = doc.Jobname.slice(0,underposn);\n\tvar shortname = job.slice(0,4)+\"_\"+job.slice(12); \n\n\temit( [shortname,doc.Strtdate, doc.company, doc.Progtype,  doc.owner],intervals);\n\n    } else {\n\t\n\temit( [doc.Progname, doc.Strtdate,doc.company, doc.Progtype, doc.owner],intervals);\n    }\n  }\n\n}"
       }
   },
   "lists": {
       "byuser": "function(head,req) { var results = []; var row; var roles = req.userCtx.roles; var admi = false; var requester = req.userCtx.name; for (var v=0;v<roles.length;v++) { if(roles[v] === \"_admin\" || roles[v] === \"jobadmin\"){admi=true;}} while(row=getRow()) {var user = row.key[3]; if(admi||user === requester) {results.push(row); } } var res = {}; res.rows = results; send(JSON.stringify(res)); }",
       "parallel_calls": "function(head, req) { var intervals = {}; var row; while (row = getRow()) { var values = row.value; var key = row.key; values.forEach(function(value) { if (!intervals[key]) { intervals[key] = {}; } if (intervals[key][value]) { intervals[key][value] ++; } else { intervals[key][value] = 1; } }); } var res = {}; var results = []; var restogo = {}; for (var key_togo in intervals) { res = {}; res.key = key_togo; res.value = intervals[key_togo]; results.push(res); } restogo.rows = results; send(JSON.stringify(restogo));}"
   },
   "updates": {
       "create_job": "function(doc, req) {     var namespace = [];     var roles = [];     var progtype;     var company = \"Unknown\";     if (doc) {         return [null, \"Only creation supported\"];     }     doc = JSON.parse(req.body);     doc._id = req.uuid;     doc.owner = req.userCtx.name;     if (doc.Progname) {         namespace = doc.Progname.split(/\\// );         if (namespace.length == 1) {             if (namespace[0].indexOf(\"Z\") === 0 || namespace[0].indexOf(\"Y\") === 0) {                 progtype = \"Custom\";             } else if (namespace[0] === \"RFKK_MASS_ACT_SINGLE_JOB\") {                 progtype = \"Mass\";             } else {                 progtype = \"Standard\";             }         } else {             progtype = namespace[1];         }         doc.Progtype = progtype;     }     roles = req.userCtx.roles;     for (var i = 0; i < roles.length; i++) {         if (roles[i].indexOf(\"JOB_CO\") === 0) {             company = roles[i].split(/_/)[2];         }     }     doc.Company = company;   log(doc);  return [doc, JSON.stringify(doc) ]; }"
   }
}