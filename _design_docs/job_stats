{
   "_id": "_design/job_stats",
   "_rev": "61-4b84649ff7eb36e8d9d7473dcc255d98",
   "language": "javascript",
   "views": {
       "status": {
           "map": "function(doc) {\n  if(doc.S && doc.owner && doc.Strtdate) { \n\n        \n        emit([doc.owner, doc.S, doc.Strtdate],doc.Jobname); \n  } \n}"
       },
       "mass_summary": {
           "map": "function(doc) { \n\n  var prefix; \n  var suffix; \n\n  if (doc.owner && doc.Progname === \"RFKK_MASS_ACT_SINGLE_JOB\" && doc.Strtdate) { \n\n        var underposn = doc.Jobname.lastIndexOf(\"_\"); \n        var job = doc.Jobname.slice(0,underposn); \n        var duration = doc.Duration.split(/:/); \n\n        var secs = parseInt(duration[0])*3600+parseInt(duration[1])*60+parseInt(duration[2]); \n\n\n        if ( doc.Strtdate && doc.Enddate) { \n                emit([doc.owner, job, doc.Strtdate], [doc.Strttime, doc.Endtime]); \n        } \n  } \n\n} \n",
           "reduce": "function(keys, values, rereduce) { \n\n  if (rereduce) { \n     return { \n      'start': ( function () { \n        var min; \n        min = \"2099-12-31T23:59:59.000Z\"; \n        if (!values) { return min; } \n        values.forEach( function (value) { \n                if ( value && value.start && value.start < min) { \n                                min = value.start; \n                        \n                } \n        } \n\n        ); \n\n        return min; \n     })(), \n\n      'finish': ( function () { \n        var max; \n        max = \"2000-01-01T23:59:59.000Z\"; \n        if (!values) { return max; } \n        values.forEach( function (value) { \n                if ( value && value.finish && value.finish > max) { \n                                max = value.finish; \n                        \n                } \n        } \n\n        ); \n\n        return max; \n     })(), \n\n      } \n  } else { \n    return  { \n      'start' : ( function () { \n        var min = \"2099-12-31T23:59:59.000Z\"; \n        if (values) { \n        values.forEach( function (value) { \n                if ( value && value[0] && value[0] < min) { \n                                min = value[0]; \n                        \n                }}); \n        return min;} \n        })(), \n\n     'finish' : ( function () { \n        var max = \"2000-01-01T23:59:59.000Z\"; \n        if (values) { \n        values.forEach( function (value) { \n                if ( value && value[1] && value[1] > max) { \n                                max = value[1]; \n                        \n                }}); \n        return max;} \n        })(), \n    } \n  } \n} "
       },
       "mass_stats": {
           "map": "function(doc) { \n\n  var prefix; \n  var suffix; \n\n  if (doc.Progname === \"RFKK_MASS_ACT_SINGLE_JOB\" && doc.owner) { \n\n        var underposn = doc.Jobname.lastIndexOf(\"_\"); \n        var job = doc.Jobname.slice(0,underposn); \n        var duration = doc.Duration.split(/:/); \n\n        var secs = parseInt(duration[0])*3600+parseInt(duration[1])*60+parseInt(duration[2]); \n\n        if (isNumber(secs) ) { \n\n                emit([doc.owner, job, doc.Strtdate], secs,'doc.CPU ms'); \n        } \n  } \n\n} \n\n\nfunction isNumber(n) { \n  return !isNaN(parseFloat(n)) && isFinite(n); \n} \n",
           "reduce": "_stats"
       },
       "mass_summary2": {
           "map": "function(doc) { \n\n  var prefix; \n  var suffix; \n\n  if (doc.owner && doc.Progname === \"RFKK_MASS_ACT_SINGLE_JOB\" && doc.Strtdate) { \n\n        var underposn = doc.Jobname.lastIndexOf(\"_\"); \n        var job = doc.Jobname.slice(0,underposn);\n\tvar short_job = job.slice(0,4)+\"_\"+job.slice(12); \n        var duration = doc.Duration.split(/:/); \n\n        var secs = parseInt(duration[0])*3600+parseInt(duration[1])*60+parseInt(duration[2]); \n\n\n        if ( doc.Strtdate && doc.Enddate) { \n                emit([doc.owner, short_job, doc.Strtdate], [doc.Strttime, doc.Endtime]); \n        } \n  } \n\n} \n",
           "reduce": "function(keys, values, rereduce) { \n\n  if (rereduce) { \n     return { \n      'start': ( function () { \n        var min; \n        min = \"2099-12-31T23:59:59.000Z\"; \n        if (!values) { return min; } \n        values.forEach( function (value) { \n                if ( value && value.start && value.start < min) { \n                                min = value.start; \n                        \n                } \n        } \n\n        ); \n\n        return min; \n     })(), \n\n      'finish': ( function () { \n        var max; \n        max = \"2000-01-01T23:59:59.000Z\"; \n        if (!values) { return max; } \n        values.forEach( function (value) { \n                if ( value && value.finish && value.finish > max) { \n                                max = value.finish; \n                        \n                } \n        } \n\n        ); \n\n        return max; \n     })(), \n\n      } \n  } else { \n    return  { \n      'start' : ( function () { \n        var min = \"2099-12-31T23:59:59.000Z\"; \n        if (values) { \n        values.forEach( function (value) { \n                if ( value && value[0] && value[0] < min) { \n                                min = value[0]; \n                        \n                }}); \n        return min;} \n        })(), \n\n     'finish' : ( function () { \n        var max = \"2000-01-01T23:59:59.000Z\"; \n        if (values) { \n        values.forEach( function (value) { \n                if ( value && value[1] && value[1] > max) { \n                                max = value[1]; \n                        \n                }}); \n        return max;} \n        })(), \n    } \n  } \n} "
       },
       "job_summary": {
           "map": "function(doc) { \n\n  var prefix; \n  var suffix; \n\n  if (doc.User && doc.Progname === \"RFKK_MASS_ACT_SINGLE_JOB\" && doc.Strtdate && doc.owner) { \n\n        var underposn = doc.Jobname.lastIndexOf(\"_\"); \n        var job = doc.Jobname.slice(0,underposn);\n\tvar short_job = job.slice(0,4)+\"_\"+job.slice(12); \n        var duration = doc.Duration.split(/:/); \n\n        var secs = parseInt(duration[0])*3600+parseInt(duration[1])*60+parseInt(duration[2]); \n\n\n        if ( doc.Strtdate && doc.Enddate) { \n                emit([short_job, doc.Strtdate, doc.owner], [doc.Strttime, doc.Endtime]); \n        } \n  } else if (doc.owner && doc.Progname && doc.Strtdate) {\n        var duration = doc.Duration.split(/:/); \n\n        var secs = parseInt(duration[0])*3600+parseInt(duration[1])*60+parseInt(duration[2]); \n\n\n        if ( doc.Strtdate && doc.Enddate) { \n                emit([doc.Progname, doc.Strtdate, doc.owner], [doc.Strttime, doc.Endtime]); \n        } \n\n  }\n\n} \n",
           "reduce": "function(keys, values, rereduce) { \n\n  if (rereduce) { \n     return { \n      'start': ( function () { \n        var min; \n        min = \"2099-12-31T23:59:59.000Z\"; \n        if (!values) { return min; } \n        values.forEach( function (value) { \n                if ( value && value.start && value.start < min) { \n                                min = value.start; \n                        \n                } \n        } \n\n        ); \n\n        return min; \n     })(), \n\n      'finish': ( function () { \n        var max; \n        max = \"2000-01-01T23:59:59.000Z\"; \n        if (!values) { return max; } \n        values.forEach( function (value) { \n                if ( value && value.finish && value.finish > max) { \n                                max = value.finish; \n                        \n                } \n        } \n\n        ); \n\n        return max; \n     })(), \n\n      } \n  } else { \n    return  { \n      'start' : ( function () { \n        var min = \"2099-12-31T23:59:59.000Z\"; \n        if (values) { \n        values.forEach( function (value) { \n                if ( value && value[0] && value[0] < min) { \n                                min = value[0]; \n                        \n                }}); \n        return min;} \n        })(), \n\n     'finish' : ( function () { \n        var max = \"2000-01-01T23:59:59.000Z\"; \n        if (values) { \n        values.forEach( function (value) { \n                if ( value && value[1] && value[1] > max) { \n                                max = value[1]; \n                        \n                }}); \n        return max;} \n        })(), \n    } \n  } \n} "
       },
       "job_stats": {
           "map": "function(doc) { \n\n  var prefix; \n  var suffix; \n\n  if (doc.Progname === \"RFKK_MASS_ACT_SINGLE_JOB\" && doc.owner) { \n\n        var underposn = doc.Jobname.lastIndexOf(\"_\"); \n        var job = doc.Jobname.slice(0,underposn);\n\tvar short_job = job.slice(0,4)+\"_\"+job.slice(12); \n        var duration = doc.Duration.split(/:/); \n\n        var secs = parseInt(duration[0])*3600+parseInt(duration[1])*60+parseInt(duration[2]); \n\n        if (isNumber(secs) ) { \n\n                emit([short_job, doc.Strtdate, doc.owner], secs,'doc.CPU ms'); \n        } \n  } else if (doc.Progname && doc.Duration && doc.owner) {\n        var duration = doc.Duration.split(/:/); \n\n        var secs = parseInt(duration[0])*3600+parseInt(duration[1])*60+parseInt(duration[2]); \n\n        if (isNumber(secs) ) { \n\n                emit([doc.Progname, doc.Strtdate, doc.owner], secs,'doc.CPU ms'); \n        } \n\n  } \n\n} \n\n\nfunction isNumber(n) { \n  return !isNaN(parseFloat(n)) && isFinite(n); \n} \n",
           "reduce": "_stats"
       }
   },
   "lists": {
       "byuser": "function(head,req) { var results = []; var row; var roles = req.userCtx.roles; var admi = false; var requester = req.userCtx.name; for (var v=0;v<roles.length;v++) { if(roles[v] === \"_admin\" || roles[v] === \"jobadmin\"){admi=true;}} while(row=getRow()) {var user = row.key[2]; if(admi||user === requester) {results.push(row); } } var res = {}; res.rows = results; send(JSON.stringify(res)); }"
   }
}